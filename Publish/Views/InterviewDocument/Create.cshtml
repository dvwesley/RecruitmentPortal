@model RecruitmentPortal.Models.InterviewDocument

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>InterviewDocument</h4>
        <hr />
        @Html.ValidationSummary(true)

        <div class="form-group">
            @Html.LabelFor(model => model.InterviewDocumentId, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.InterviewDocumentId)
                @Html.ValidationMessageFor(model => model.InterviewDocumentId)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.InterviewId, "InterviewId", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("InterviewId", String.Empty)
                @Html.ValidationMessageFor(model => model.InterviewId)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DocumentTypeId, "DocumentTypeId", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("DocumentTypeId", String.Empty)
                @Html.ValidationMessageFor(model => model.DocumentTypeId)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FilePath, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FilePath)
                @Html.ValidationMessageFor(model => model.FilePath)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description)
                @Html.ValidationMessageFor(model => model.Description)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FileName, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FileName)
                @Html.ValidationMessageFor(model => model.FileName)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ContentType, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ContentType)
                @Html.ValidationMessageFor(model => model.ContentType)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.UploadedBy, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.UploadedBy)
                @Html.ValidationMessageFor(model => model.UploadedBy)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.UploadedTimeStamp, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.UploadedTimeStamp)
                @Html.ValidationMessageFor(model => model.UploadedTimeStamp)
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
